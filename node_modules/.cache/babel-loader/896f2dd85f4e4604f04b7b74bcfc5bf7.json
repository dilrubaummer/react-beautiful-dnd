{"ast":null,"code":"var _jsxFileName = \"/Applications/React-Project/react-dnd/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'reset-css';\nimport initialData from './initial-data';\nimport Column from './column';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay:flex;\n`;\n_c = Container;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialData;\n    this.onDragStart = start => {\n      const homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n      this.setState({\n        homeIndex\n      });\n    };\n    this.onDragEnd = result => {\n      //ToDo reorder Column\n      this.setState({\n        homeIndex: null\n      });\n      document.body.style.color = 'inherit';\n      document.body.style.backgroundColor = 'inherit';\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      if (!destination) {\n        return;\n      }\n      if (destination.droppableId === source.droppableId && source.index === destination.index) {\n        return;\n      }\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = {\n          ...start,\n          taskIds: newTaskIds\n        };\n        const newState = {\n          ...this.state,\n          columns: {\n            ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      }\n\n      //Moving one list to another\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragStart: this.onDragStart\n      //onDragUpdate = {this.onDragUpdate}\n      ,\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: this.state.columnOrder.map((columnId, index) => {\n          const column = this.state.columns[columnId];\n          const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n          const isDropdisabled = index < this.state.homeIndex;\n          return /*#__PURE__*/_jsxDEV(Column, {\n            column: column,\n            tasks: tasks\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 12\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this);\n  }\n}\nroot.render(\n/*#__PURE__*/\n//<React.StrictMode>\n_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 127,\n  columnNumber: 5\n}, this)\n//</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","ReactDOM","initialData","Column","styled","DragDropContext","Container","div","root","createRoot","document","getElementById","App","Component","state","onDragStart","start","homeIndex","columnOrder","indexOf","source","droppableId","setState","onDragEnd","result","body","style","color","backgroundColor","destination","draggableId","index","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","startTaskIds","newStart","finishTaskIds","newFinish","render","map","columnId","column","tasks","taskId","isDropdisabled"],"sources":["/Applications/React-Project/react-dnd/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'reset-css';\nimport initialData from './initial-data';\nimport Column from './column'; \nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n\tdisplay:flex;\n`;\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nclass App extends React.Component{\n\tstate = initialData;\n\t// onDragStart = () => {\n\t// \tdocument.body.style.color ='orange';\n\t// \tdocument.body.style.transition = 'background-color 0.2s ease';\n\t// };\n\n\t// onDragUpdate = update => {\n\t// \tconst {destination} = update;\n\t// \tconst opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0;\n\t// \tdocument.body.style.backgroundColor  = `rgba(153, 141, 217, ${opacity})`;\n\t// };\n\n\tonDragStart = (start) =>{\n\t\tconst homeIndex = this.state.columnOrder.indexOf(start.source.droppableId);\n\t\tthis.setState({\n\t\t\thomeIndex,\n\t\t});\n\t}\n\n\tonDragEnd = result => {\n\t\t//ToDo reorder Column\n\t\tthis.setState({\n\t\t\thomeIndex:null,\n\t\t});\n\n\t\tdocument.body.style.color ='inherit';\n\t\tdocument.body.style.backgroundColor = 'inherit';\n\t\tconst {destination, source, draggableId} =result;\n\n\t\tif(!destination){\n\t\t\treturn;\n\t\t}\n\n\t\tif(destination.droppableId === source.droppableId && source.index === destination.index){\n\t\t\treturn;\n\t\t}\n\n\t\tconst start  = this.state.columns[source.droppableId];\n\t\tconst finish = this.state.columns[destination.droppableId];\n\n\t\tif( start === finish){\n\n\t\t\tconst newTaskIds = Array.from(start.taskIds); \n\t\t\tnewTaskIds.splice(source.index,1);\n\t\t\tnewTaskIds.splice(destination.index, 0, draggableId);\n\n\t\t\tconst newColumn = {\n\t\t\t\t...start,\n\t\t\t\ttaskIds:newTaskIds\n\t\t\t};\n\t\t\tconst newState = {\n\t\t\t\t...this.state,\n\t\t\t\tcolumns:{\n\t\t\t\t\t...this.state.columns,\n\t\t\t\t\t[newColumn.id]:newColumn,\n\t\t\t\t},\n\t\t\t};\n\t\t\tthis.setState(newState);\n\t\t\treturn;\n\t\t}\n\n\t\t//Moving one list to another\n\t\tconst startTaskIds = Array.from(start.taskIds);  \n\t\tstartTaskIds.splice(source.index, 1);\n\t\tconst newStart = {\n\t\t\t...start,\n\t\t\ttaskIds:startTaskIds,\n\t\t};\n\n\t\tconst finishTaskIds = Array.from(finish.taskIds); \n\t\tfinishTaskIds.splice(destination.index, 0, draggableId);\n\t\tconst newFinish = {\n\t\t\t...finish,\n\t\t\ttaskIds:finishTaskIds,\n\t\t};\n\n\t\tconst newState = {\n\t\t\t...this.state,\n\t\t\tcolumns:{\n\t\t\t\t...this.state.columns,\n\t\t\t\t[newStart.id]: newStart,\n\t\t\t\t[newFinish.id]: newFinish,\n\t\t\t},\n\t\t};\n\t\tthis.setState(newState)\n\t\n\t};\n\n\trender(){\n\t\treturn (\n\t\t\t<DragDropContext \n\t\t\t\tonDragStart = {this.onDragStart}\n\t\t\t\t//onDragUpdate = {this.onDragUpdate}\n\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t>\n\t\t\t<Container>\n\t\t\t{\tthis.state.columnOrder.map( (columnId, index) => {\n\t\t\t\tconst column = this.state.columns[columnId];\n\t\t\t\tconst tasks  = column.taskIds.map(taskId => this.state.tasks[taskId]); \n\t\t\t\tconst isDropdisabled = index < this.state.homeIndex; \n\t\t\t\treturn <Column key={column.id} column={column} tasks={tasks} />;\n\t\t\t\t})\n\t\t\t}\t\n\t\t\t</Container>\t\n\t\t\t</DragDropContext>\n\t\t\n\t\t);\n\t} \n}\n\nroot.render(\n  //<React.StrictMode>\n    <App />\n  //</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}