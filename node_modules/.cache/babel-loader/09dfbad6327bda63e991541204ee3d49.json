{"ast":null,"code":"var _jsxFileName = \"/Applications/React-Project/react-dnd/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'reset-css';\nimport initialData from './initial-data';\nimport Column from './column';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialData;\n    this.onDragStart = () => {\n      document.body.style.color = 'orange';\n      document.body.style.transition = 'background-color 0.2s ease';\n    };\n    this.onDragUpdate = update => {\n      const destination = {\n        update\n      };\n      const opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0;\n      document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    };\n    this.onDragEnd = result => {\n      //ToDo reorder Column\n      document.body.style.color = 'inherit';\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      if (!destination) {\n        return;\n      }\n      if (destination.droppableId === source.droppableId && source.index === destination.index) {\n        return;\n      }\n      const column = this.state.columns[source.droppableId];\n      const newTaskIds = Array.from(column.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...column,\n        taskIds: newTaskIds\n      };\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n      this.setState(newState);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragStart: this.onDragStart,\n      onDragUpdate: this.onDragUpdate,\n      onDragEnd: this.onDragEnd,\n      children: this.state.columnOrder.map(columnId => {\n        const column = this.state.columns[columnId];\n        const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n        return /*#__PURE__*/_jsxDEV(Column, {\n          column: column,\n          tasks: tasks\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this);\n  }\n}\nroot.render(\n/*#__PURE__*/\n//<React.StrictMode>\n_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 5\n}, this)\n//</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","initialData","Column","DragDropContext","root","createRoot","document","getElementById","App","Component","state","onDragStart","body","style","color","transition","onDragUpdate","update","destination","opacity","index","Object","keys","tasks","length","backgroundColor","onDragEnd","result","source","draggableId","droppableId","column","columns","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","setState","render","columnOrder","map","columnId","taskId"],"sources":["/Applications/React-Project/react-dnd/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'reset-css';\nimport initialData from './initial-data';\nimport Column from './column'; \nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nclass App extends React.Component{\n\tstate = initialData;\n\tonDragStart = () => {\n\t\tdocument.body.style.color ='orange';\n\t\tdocument.body.style.transition = 'background-color 0.2s ease';\n\t}\n\n\tonDragUpdate = update => {\n\t\tconst destination = {update};\n\t\tconst opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0;\n\t\tdocument.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n\t}\n\n\tonDragEnd = result => {\n\t\t//ToDo reorder Column\n\t\tdocument.body.style.color ='inherit';\n\t\tconst {destination, source, draggableId} =result;\n\n\t\tif(!destination){\n\t\t\treturn;\n\t\t}\n\n\t\tif(destination.droppableId === source.droppableId && source.index === destination.index){\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.state.columns[source.droppableId];\n\t\tconst newTaskIds = Array.from(column.taskIds); \n\t\tnewTaskIds.splice(source.index,1);\n\t\tnewTaskIds.splice(destination.index, 0, draggableId);\n\n\t\tconst newColumn = {\n\t\t\t...column,\n\t\t\ttaskIds:newTaskIds\n\t\t};\n\t\tconst newState = {\n\t\t\t...this.state,\n\t\t\tcolumns:{\n\t\t\t\t...this.state.columns,\n\t\t\t\t[newColumn.id]:newColumn,\n\t\t\t},\n\t\t};\n\t\tthis.setState(newState);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<DragDropContext \n\t\t\t\tonDragStart = {this.onDragStart}\n\t\t\t\tonDragUpdate = {this.onDragUpdate}\n\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t>\n\t\t\t{\tthis.state.columnOrder.map(columnId => {\n\t\t\t\tconst column = this.state.columns[columnId];\n\t\t\t\tconst tasks  = column.taskIds.map(taskId => this.state.tasks[taskId]);  \n\t\t\t\treturn <Column key={column.id} column={column} tasks={tasks} />;\n\t\t\t\t})\n\t\t\t}\t\t\n\t\t\t</DragDropContext>\n\t\t\n\t\t);\n\t} \n}\n\nroot.render(\n  //<React.StrictMode>\n    <App />\n  //</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,eAAe,QAAQ,qBAAqB;AAAC;AAEtD,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE,MAAMC,GAAG,SAAST,KAAK,CAACU,SAAS;EAAA;IAAA;IAAA,KAChCC,KAAK,GAAGT,WAAW;IAAA,KACnBU,WAAW,GAAG,MAAM;MACnBL,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACC,KAAK,GAAE,QAAQ;MACnCR,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,4BAA4B;IAC9D,CAAC;IAAA,KAEDC,YAAY,GAAGC,MAAM,IAAI;MACxB,MAAMC,WAAW,GAAG;QAACD;MAAM,CAAC;MAC5B,MAAME,OAAO,GAAGD,WAAW,GAAGA,WAAW,CAACE,KAAK,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAACa,KAAK,CAAC,CAACC,MAAM,GAAG,CAAC;MAC1FlB,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACY,eAAe,GAAI,uBAAsBN,OAAQ,GAAE;IACxE,CAAC;IAAA,KAEDO,SAAS,GAAGC,MAAM,IAAI;MACrB;MACArB,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACC,KAAK,GAAE,SAAS;MACpC,MAAM;QAACI,WAAW;QAAEU,MAAM;QAAEC;MAAW,CAAC,GAAEF,MAAM;MAEhD,IAAG,CAACT,WAAW,EAAC;QACf;MACD;MAEA,IAAGA,WAAW,CAACY,WAAW,KAAKF,MAAM,CAACE,WAAW,IAAIF,MAAM,CAACR,KAAK,KAAKF,WAAW,CAACE,KAAK,EAAC;QACvF;MACD;MAEA,MAAMW,MAAM,GAAG,IAAI,CAACrB,KAAK,CAACsB,OAAO,CAACJ,MAAM,CAACE,WAAW,CAAC;MACrD,MAAMG,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC;MAC7CH,UAAU,CAACI,MAAM,CAACT,MAAM,CAACR,KAAK,EAAC,CAAC,CAAC;MACjCa,UAAU,CAACI,MAAM,CAACnB,WAAW,CAACE,KAAK,EAAE,CAAC,EAAES,WAAW,CAAC;MAEpD,MAAMS,SAAS,GAAG;QACjB,GAAGP,MAAM;QACTK,OAAO,EAACH;MACT,CAAC;MACD,MAAMM,QAAQ,GAAG;QAChB,GAAG,IAAI,CAAC7B,KAAK;QACbsB,OAAO,EAAC;UACP,GAAG,IAAI,CAACtB,KAAK,CAACsB,OAAO;UACrB,CAACM,SAAS,CAACE,EAAE,GAAEF;QAChB;MACD,CAAC;MACD,IAAI,CAACG,QAAQ,CAACF,QAAQ,CAAC;IACxB,CAAC;EAAA;EAEDG,MAAM,GAAE;IACP,oBACC,QAAC,eAAe;MACf,WAAW,EAAI,IAAI,CAAC/B,WAAY;MAChC,YAAY,EAAI,IAAI,CAACK,YAAa;MAClC,SAAS,EAAI,IAAI,CAACU,SAAU;MAAA,UAE3B,IAAI,CAAChB,KAAK,CAACiC,WAAW,CAACC,GAAG,CAACC,QAAQ,IAAI;QACxC,MAAMd,MAAM,GAAG,IAAI,CAACrB,KAAK,CAACsB,OAAO,CAACa,QAAQ,CAAC;QAC3C,MAAMtB,KAAK,GAAIQ,MAAM,CAACK,OAAO,CAACQ,GAAG,CAACE,MAAM,IAAI,IAAI,CAACpC,KAAK,CAACa,KAAK,CAACuB,MAAM,CAAC,CAAC;QACrE,oBAAO,QAAC,MAAM;UAAiB,MAAM,EAAEf,MAAO;UAAC,KAAK,EAAER;QAAM,GAAxCQ,MAAM,CAACS,EAAE;UAAA;UAAA;UAAA;QAAA,QAAkC;MAC/D,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEe;EAGpB;AACD;AAEApC,IAAI,CAACsC,MAAM;AAAA;AACT;AACE,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA;AACN;AAAA,CACD;;AAED;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}